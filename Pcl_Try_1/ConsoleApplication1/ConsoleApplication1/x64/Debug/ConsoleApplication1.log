  ConsoleApplication1.cpp
d:\software\vs2015\pcl\pcl 1.8.1\include\pcl-1.8\pcl\sample_consensus\model_types.h(99): error C4996: 'pcl::SAC_SAMPLE_SIZE': This map is deprecated and is kept only to prevent breaking existing user code. Starting from PCL 1.8.0 model sample size is a protected member of the SampleConsensusModel class
  d:\software\vs2015\pcl\pcl 1.8.1\include\pcl-1.8\pcl\sample_consensus\model_types.h(99): note: 参见“pcl::SAC_SAMPLE_SIZE”的声明
d:\software\vs_location\vc\include\xmemory(102): error C4996: 'std::uninitialized_copy::_Unchecked_iterators::_Deprecate': Call to 'std::uninitialized_copy' with parameters that may be unsafe - this call relies on the caller to check that the passed values are correct. To disable this warning, use -D_SCL_SECURE_NO_WARNINGS. See documentation on how to use Visual C++ 'Checked Iterators'
  d:\software\vs_location\vc\include\xmemory(102): note: 参见“std::uninitialized_copy::_Unchecked_iterators::_Deprecate”的声明
  d:\software\vs2015\pcl\pcl 1.8.1\3rdparty\boost\include\boost-1_64\boost\signals2\detail\auto_buffer.hpp(191): note: 参见对正在编译的函数 模板 实例化“_FwdIt *std::uninitialized_copy<I,boost::shared_ptr<void>*>(_InIt,_InIt,_FwdIt)”的引用
          with
          [
              _FwdIt=boost::shared_ptr<void> *,
              I=boost::shared_ptr<void> *,
              _InIt=boost::shared_ptr<void> *
          ]
  d:\software\vs2015\pcl\pcl 1.8.1\3rdparty\boost\include\boost-1_64\boost\signals2\detail\auto_buffer.hpp(178): note: 参见对正在编译的函数 模板 实例化“void boost::signals2::detail::auto_buffer<boost::shared_ptr<void>,boost::signals2::detail::store_n_objects<10>,boost::signals2::detail::default_grow_policy,std::allocator<T>>::copy_rai<I,false>(I,I,boost::shared_ptr<void> *,const boost::integral_constant<bool,false> &)”的引用
          with
          [
              T=boost::shared_ptr<void>,
              I=boost::shared_ptr<void> *
          ]
  d:\software\vs2015\pcl\pcl 1.8.1\3rdparty\boost\include\boost-1_64\boost\signals2\detail\auto_buffer.hpp(178): note: 参见对正在编译的函数 模板 实例化“void boost::signals2::detail::auto_buffer<boost::shared_ptr<void>,boost::signals2::detail::store_n_objects<10>,boost::signals2::detail::default_grow_policy,std::allocator<T>>::copy_rai<I,false>(I,I,boost::shared_ptr<void> *,const boost::integral_constant<bool,false> &)”的引用
          with
          [
              T=boost::shared_ptr<void>,
              I=boost::shared_ptr<void> *
          ]
  d:\software\vs2015\pcl\pcl 1.8.1\3rdparty\boost\include\boost-1_64\boost\signals2\detail\auto_buffer.hpp(204): note: 参见对正在编译的函数 模板 实例化“void boost::signals2::detail::auto_buffer<boost::shared_ptr<void>,boost::signals2::detail::store_n_objects<10>,boost::signals2::detail::default_grow_policy,std::allocator<T>>::copy_impl<I>(I,I,boost::shared_ptr<void> *,std::random_access_iterator_tag)”的引用
          with
          [
              T=boost::shared_ptr<void>,
              I=boost::shared_ptr<void> *
          ]
  d:\software\vs2015\pcl\pcl 1.8.1\3rdparty\boost\include\boost-1_64\boost\signals2\detail\auto_buffer.hpp(203): note: 参见对正在编译的函数 模板 实例化“void boost::signals2::detail::auto_buffer<boost::shared_ptr<void>,boost::signals2::detail::store_n_objects<10>,boost::signals2::detail::default_grow_policy,std::allocator<T>>::copy_impl<I>(I,I,boost::shared_ptr<void> *,std::random_access_iterator_tag)”的引用
          with
          [
              T=boost::shared_ptr<void>,
              I=boost::shared_ptr<void> *
          ]
  d:\software\vs2015\pcl\pcl 1.8.1\3rdparty\boost\include\boost-1_64\boost\signals2\detail\auto_buffer.hpp(296): note: 参见对正在编译的函数 模板 实例化“void boost::signals2::detail::auto_buffer<boost::shared_ptr<void>,boost::signals2::detail::store_n_objects<10>,boost::signals2::detail::default_grow_policy,std::allocator<T>>::copy_impl<boost::shared_ptr<void>*>(I,I,boost::shared_ptr<void> *)”的引用
          with
          [
              T=boost::shared_ptr<void>,
              I=boost::shared_ptr<void> *
          ]
  d:\software\vs2015\pcl\pcl 1.8.1\3rdparty\boost\include\boost-1_64\boost\signals2\detail\auto_buffer.hpp(296): note: 参见对正在编译的函数 模板 实例化“void boost::signals2::detail::auto_buffer<boost::shared_ptr<void>,boost::signals2::detail::store_n_objects<10>,boost::signals2::detail::default_grow_policy,std::allocator<T>>::copy_impl<boost::shared_ptr<void>*>(I,I,boost::shared_ptr<void> *)”的引用
          with
          [
              T=boost::shared_ptr<void>,
              I=boost::shared_ptr<void> *
          ]
  d:\software\vs2015\pcl\pcl 1.8.1\3rdparty\boost\include\boost-1_64\boost\signals2\detail\auto_buffer.hpp(294): note: 编译类 模板 成员函数“boost::shared_ptr<void> *boost::signals2::detail::auto_buffer<boost::shared_ptr<void>,boost::signals2::detail::store_n_objects<10>,boost::signals2::detail::default_grow_policy,std::allocator<T>>::move_to_new_buffer(unsigned __int64,const boost::true_type &)”时
          with
          [
              T=boost::shared_ptr<void>
          ]
  d:\software\vs2015\pcl\pcl 1.8.1\3rdparty\boost\include\boost-1_64\boost\signals2\detail\auto_buffer.hpp(302): note: 参见对正在编译的函数 模板 实例化“boost::shared_ptr<void> *boost::signals2::detail::auto_buffer<boost::shared_ptr<void>,boost::signals2::detail::store_n_objects<10>,boost::signals2::detail::default_grow_policy,std::allocator<T>>::move_to_new_buffer(unsigned __int64,const boost::true_type &)”的引用
          with
          [
              T=boost::shared_ptr<void>
          ]
  d:\software\vs2015\pcl\pcl 1.8.1\3rdparty\boost\include\boost-1_64\boost\signals2\connection.hpp(53): note: 参见对正在编译的类 模板 实例化“boost::signals2::detail::auto_buffer<boost::shared_ptr<void>,boost::signals2::detail::store_n_objects<10>,boost::signals2::detail::default_grow_policy,std::allocator<T>>”的引用
          with
          [
              T=boost::shared_ptr<void>
          ]
  d:\software\vs2015\pcl\pcl 1.8.1\3rdparty\boost\include\boost-1_64\boost\signals2\connection.hpp(55): note: 参见对正在编译的类 模板 实例化“boost::signals2::detail::garbage_collecting_lock<Mutex>”的引用
  d:\software\vs2015\pcl\pcl 1.8.1\3rdparty\boost\include\boost-1_64\boost\bind\placeholders.hpp(54): note: 参见对正在编译的类 模板 实例化“boost::arg<9>”的引用
  d:\software\vs2015\pcl\pcl 1.8.1\3rdparty\boost\include\boost-1_64\boost\bind\placeholders.hpp(53): note: 参见对正在编译的类 模板 实例化“boost::arg<8>”的引用
  d:\software\vs2015\pcl\pcl 1.8.1\3rdparty\boost\include\boost-1_64\boost\bind\placeholders.hpp(52): note: 参见对正在编译的类 模板 实例化“boost::arg<7>”的引用
  d:\software\vs2015\pcl\pcl 1.8.1\3rdparty\boost\include\boost-1_64\boost\bind\placeholders.hpp(51): note: 参见对正在编译的类 模板 实例化“boost::arg<6>”的引用
  d:\software\vs2015\pcl\pcl 1.8.1\3rdparty\boost\include\boost-1_64\boost\bind\placeholders.hpp(50): note: 参见对正在编译的类 模板 实例化“boost::arg<5>”的引用
  d:\software\vs2015\pcl\pcl 1.8.1\3rdparty\boost\include\boost-1_64\boost\bind\placeholders.hpp(49): note: 参见对正在编译的类 模板 实例化“boost::arg<4>”的引用
  d:\software\vs2015\pcl\pcl 1.8.1\3rdparty\boost\include\boost-1_64\boost\bind\placeholders.hpp(48): note: 参见对正在编译的类 模板 实例化“boost::arg<3>”的引用
  d:\software\vs2015\pcl\pcl 1.8.1\3rdparty\boost\include\boost-1_64\boost\bind\placeholders.hpp(47): note: 参见对正在编译的类 模板 实例化“boost::arg<2>”的引用
  d:\software\vs2015\pcl\pcl 1.8.1\3rdparty\boost\include\boost-1_64\boost\bind\placeholders.hpp(46): note: 参见对正在编译的类 模板 实例化“boost::arg<1>”的引用
